public void generateFileController(String path, StringBuilder stringBuilder, String tableName, String language) {
        try {
            if (language.equals("java")) {
                PrintWriter writer = new PrintWriter(path + capitalize(tableName) + "Controller.java", "UTF-8");
                writer.println(stringBuilder.toString());
                writer.close();
            } else if (language.equals("C#")) {
                PrintWriter writer = new PrintWriter(path + capitalize(tableName) + "Controller.cs", "UTF-8");
                writer.println(stringBuilder.toString());
                writer.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void generateAllController(String path, String language, String dossier, String methode) {
        String template = null;
        try {
            List<String> tableName = this.getAllTableName();
            for (int i = 0; i < tableName.size(); i++) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("namespace").append("."+capitalize(dossier)).append(".Controllers\n");

                ResultSet result = this.getInformationTable(tableName.get(i));
                /// field declarations
                String[] fieldDeclarations = this.generateAttributes(result, stringBuilder);

                // Read Template
                if (language.equals("java")) {
                    template = new String(Files.readAllBytes(
                            Paths.get("C:\\Users\\LENOVO\\OneDrive\\Documents\\NetBeansProjects\\GEN\\JAVAController.txt")));
                } else if (language.equals("C#")) {
                    template = new String(Files
                            .readAllBytes(Paths.get("C:\\Users\\LENOVO\\OneDrive\\Documents\\NetBeansProjects\\GEN\\CONTROLLERC#.txt")));
                }

                // Replace Placeholders
                String importStatements = generateImport(fieldDeclarations[1]);
                String fields = fieldDeclarations[0];
                String classContent = template.replace("CLASSNAME", capitalize(tableName.get(i)))
                        .replace("PACKAGE", stringBuilder)
                        .replace("METHODE", methode);
                System.out.println(importStatements);
                stringBuilder.append("}\n"); /// fermeture class

                // create file
                this.generateFileController(path, new StringBuilder(classContent), tableName.get(i), language);
                // System.out.println(classContent);

                System.out.println(stringBuilder.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
